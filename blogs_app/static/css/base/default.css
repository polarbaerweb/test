/***
    The new CSS reset - version 1.8.4 (last updated 14.2.2023)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/

@import url("https://fonts.googleapis.com/css2?family=Roboto+Condensed&display=swap");

/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
 */
*:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
	all: unset;
	display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
	box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
	cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu {
	list-style: none;
}

/* For images to not be able to exceed their container */
img {
	max-inline-size: 100%;
	max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
	border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input,
textarea {
	-webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
	white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
	-webkit-appearance: revert;
	appearance: revert;
}

/* preformatted text - use only for this feature */
:where(pre) {
	all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
	color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
	content: initial;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
	display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable="false"])) {
	-moz-user-modify: read-write;
	-webkit-user-modify: read-write;
	overflow-wrap: break-word;
	-webkit-line-break: after-white-space;
	-webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable="true"]) {
	-webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
	all: revert;
}

html {
	font-family: "Roboto Condensed", sans-serif;
	font-size: 10px;
}

body {
	height: 100vh;
	width: 100vw;
	overflow-x: hidden;
}

.wrapper {
	height: 100%;
	width: 100%;
	display: grid;
	grid-template-rows: 150px 1fr 200px;
	justify-content: space-between;
	align-items: start;
}

.container {
	width: 90%;
	height: 100%;
	margin: 0 auto;
}

.btn__link {
	background-color: #fca311;
	padding: 10px 20px;
	border-radius: 6px;
}

.btn__link:hover {
	background-color: #ffb703;
	transition: all 0.3s;
}

.__read_more {
	padding: 3px 10px;
	margin: 0 0 0 10px;
}

.link:hover {
	transition: color 0.1s;
	text-decoration: underline;
	color: #ffffff38;
}
